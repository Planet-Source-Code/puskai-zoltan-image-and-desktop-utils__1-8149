library JPGUtils;

uses
  SysUtils,
  Classes,
  Windows,
  Graphics,
  Jpeg;

function getDesktop(nWidth : Integer; nHeight : Integer; blnJpeg : Boolean; JPGCompressQuality:Integer; strFileName : String): Integer; stdcall;

var
    bmp: TBitmap;
    hDesktop : Longint;
    hdcCompatible : Longint;
    hbmScreen : HBITMAP;
    jpg: TJPEGImage;
    strFileNameTemp : String;
begin
  hDesktop := GetDC(GetDesktopWindow);
  hdcCompatible := CreateCompatibleDC(hDesktop);
  if nWidth <> 0 then
    begin
      hbmScreen := CreateCompatibleBitmap(hDesktop,nWidth,nHeight);
      SelectObject(hdcCompatible, hbmScreen);
      StretchBlt (hdcCompatible,0,0,nWidth,nHeight,hDesktop,0,0,GetDeviceCaps(hDesktop, HORZRES),GetDeviceCaps(hDesktop, VERTRES),SRCCOPY);
    end
  else
    begin
      hbmScreen := CreateCompatibleBitmap(hDesktop,GetDeviceCaps(hDesktop, HORZRES),GetDeviceCaps(hDesktop, VERTRES));
      SelectObject(hdcCompatible, hbmScreen);
      BitBlt(hdcCompatible,0,0,GetDeviceCaps(hDesktop, HORZRES),GetDeviceCaps(hDesktop, VERTRES),hDesktop,0,0,SRCCOPY);
    end;
  bmp := TBitmap.Create;
  bmp.Handle := hbmScreen;

  if blnJpeg then
    begin
      strFileNameTemp:=strFileName + '.bmp';
      jpg:= TJpegImage.Create();
      bmp.SaveToFile(strFileNameTemp);
      bmp.LoadFromFile(strFileNameTemp);
      jpg.Assign(bmp);
      if (JPGCompressQuality <10) or (JPGCompressQuality> 100) then
        jpg.CompressionQuality :=90
      else
        jpg.CompressionQuality :=JPGCompressQuality;
      jpg.Compress;
      jpg.SaveToFile (strFileName);
      jpg.Free;
      SysUtils.DeleteFile(strFileNameTemp);
    end
  else
    bmp.SaveToFile(strFileName);
  bmp.Free;
  result := 1;
end;

function ConvertBMPtoJPG(strFileName : String; JPGCompressQuality:Integer; blnKeepBMP : Boolean):Integer;stdcall;
var
    bmp: TBitmap;
    jpg: TJPEGImage;
    strJpegFileName :String;
begin
    if FileExists (strFileName) then
      begin
        bmp:=TBitmap.Create ;
        bmp.LoadFromFile(strFileName);
        jpg:= TJpegImage.Create;
        jpg.Assign(bmp);
        if (JPGCompressQuality <10) or (JPGCompressQuality> 100) then
          jpg.CompressionQuality :=90
        else
          jpg.CompressionQuality :=JPGCompressQuality;
        jpg.Compress;
        strJpegFileName:=copy(strFileName,0,length(strFileName)-3) + 'jpg';
        if  FileExists (strJpegFileName) then Sysutils.DeleteFile(strJpegFileName);
        jpg.SaveToFile(strJpegFileName);
        if not blnKeepBMP then Sysutils.DeleteFile(strFileName);
        result:=1;
      end
    else
      result:=0
end;

function ConvertJPGtoBMP(strFileName : String; blnKeepJPG : Boolean):Integer;stdcall;
var
    bmp: TBitmap;
    pic: TPicture;
    strBMPFileName :String;
begin
    if FileExists (strFileName) then
      begin
        pic := TPicture.Create;
        pic.LoadFromFile(strFileName);
        bmp:=TBitmap.Create ;
        bmp.assign(pic.Graphic);
        strBMPFileName:=copy(strFileName,0,length(strFileName)-3) + 'bmp';
        if  FileExists (strBMPFileName) then Sysutils.DeleteFile(strBMPFileName);
        bmp.SaveToFile(strBMPFileName);
        if not blnKeepJPG then Sysutils.DeleteFile(strFileName);
        result:=1;
      end
    else
      result:=0
end;


exports
  getDesktop,
  ConvertJPGtoBMP,
  ConvertBMPtoJPG;
begin

end.